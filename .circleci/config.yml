version: 2.1

executors:
  jdk:
    docker:
      - image: maven:3-openjdk-18
  docker:
    docker:
      - image: cimg/base:2021.04

jobs:
  application_build:
    executor: jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: "Build using Maven"
          command: |
            mvn -B clean package
      - save_cache:
          paths: 
            - "~/.m2"
          key: v1-dependencies-{{ checksum "pom.xml" }}      
      - store_test_results:
          path: target/surefire-reports
      - persist_to_workspace:
          root: target/
          paths: 
            - "*.war"
  container_build:
    executor: docker
    steps:
      - checkout
      - attach_workspace:
          at: target/
      - setup_remote_docker
      - run:
          name: "Build Docker image"
          command: |
            export VERSION=$(git describe --tags --match "release-*" | cut -d '-' -f2-)
            docker build -t perdian/flightlog:${VERSION} .
  container_build_and_publish:
    executor: docker
    steps:
      - checkout
      - attach_workspace:
          at: target/
      - setup_remote_docker
      - run:
          name: "Build Docker image"
          command: |
            export VERSION=$(git describe --tags --match "release-*" | cut -d '-' -f2-)
            docker build -t perdian/flightlog:${VERSION} .
            echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
            docker push perdian/flightlog:${VERSION}
      - run:
          name: "Publish README to Docker Hub"
          command: |
            docker create -v /data --name datas alpine:3.4 /bin/true
            docker cp README.md datas:/data
            docker run --rm \
              --volumes-from datas \
              -e DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME \
              -e DOCKERHUB_PASSWORD=$DOCKERHUB_PASSWORD \
              -e DOCKERHUB_REPO_NAME=flightlog \
              devmtl/readme-to-dockerhub
  github_release:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - checkout
      - attach_workspace:
          at: target/
      - run:
          name: "Create GitHub release"
          command: |
            export VERSION=$(git describe --tags --match "release-*" | cut -d '-' -f2-)
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -n ${VERSION} \
                release-${VERSION}

workflows:
  version: 2
  build:
    jobs:
      - application_build:
          filters:
            branches:
              only: /.*/                
            tags:
              ignore: /.*/
      - container_build:
          requires: [ "application_build" ]
          filters:
            branches:
              only: /.*/                
            tags:
              ignore: /.*/
  build_and_publish:
    jobs:
      - application_build:
          filters:
            branches:
              ignore: /.*/                
            tags:
              only: /release-.*/                
      - container_build_and_publish:
          requires: [ "application_build" ]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-.*/                
      - github_release:
          requires: [ "container_build_and_publish" ]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-.*/                
